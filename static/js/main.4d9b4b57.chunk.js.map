{"version":3,"sources":["components/card/card.js","components/cardList/cardList.js","components/searchComponent/searchComponent.js","index.js"],"names":["Card","props","className","alt","src","user","id","name","email","CardList","this","users","map","key","Component","SearchComponent","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","catch","error","console","log","filtererdUsers","filter","toLowerCase","includes","ReactDOM","render","document","querySelector"],"mappings":"2RAWeA,G,YARF,SAACC,GAAD,OACT,yBAAKC,UAAU,kBACf,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BACtB,4BAAKL,EAAMI,KAAKE,MAChB,2BAAIN,EAAMI,KAAKG,UCQJC,E,uKATX,OACI,yBAAKP,UAAU,aACdQ,KAAKT,MAAMU,MAAMC,KAAI,SAAAP,GAAI,OACtB,kBAAC,EAAD,CAAMQ,IAAKR,EAAKC,GAAID,KAAMA,Y,GALfS,aCYRC,G,MAdgB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACzC,OACJ,2BACAf,UAAU,SACVgB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCFJG,G,wDACF,aAAc,IAAD,8BACT,gBAcJH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACTf,MAAO,GACPY,YAAa,IAJR,E,gEAOO,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAYA,EAASC,UAC1BF,MAAK,SAAAjB,GAAK,OAAI,EAAKW,SAAS,CACzBX,MAAOA,OAEVoB,OAAM,SAAAC,GAAK,OAAGC,QAAQC,IAAIF,Q,+BAMb,IAAD,EACsBtB,KAAKgB,MAA5Bf,EADC,EACDA,MAAOY,EADN,EACMA,YACTY,EAAiBxB,EAAMyB,QAAO,SAAA/B,GAAI,OAAEA,EAAKE,KAAK8B,cAAcC,SAASf,EAAYc,kBAEvF,OADAJ,QAAQC,IAAIX,EAAa,OAEzB,yBAAKrB,UAAU,OACf,gDACA,kBAAC,EAAD,CACAc,YAAY,iBACZC,aAAcP,KAAKO,eACnB,kBAAC,EAAD,CAAUN,MAAOwB,S,GA9BPrB,cAmClByB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.4d9b4b57.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css'\r\n\r\nconst Card = (props) => (\r\n    <div className='card-container'>\r\n    <img alt='monster' src={`https://robohash.org/${props.user.id}?set=set2&size=180x180`} />\r\n    <h1>{props.user.name}</h1>\r\n    <p>{props.user.email}</p>\r\n    </div>\r\n\r\n)\r\nexport default Card;","import React, { Component } from 'react';\r\nimport  './card-list.css';\r\nimport Card from '../card/card';\r\n\r\nclass CardList extends Component {\r\nrender(){\r\n    return (\r\n        <div className='card-list'>\r\n        {this.props.users.map(user => (\r\n            <Card key={user.id} user={user} />\r\n        ))}\r\n        </div>\r\n    );\r\n}\r\n}\r\nexport default CardList;","import React from 'react';\r\nimport './searchComponent.css';\r\nexport const SearchComponent = ({placeholder,handleChange}) => {\r\n    return(\r\n<input \r\nclassName='search'\r\ntype='search'\r\nplaceholder={placeholder}\r\nonChange={handleChange}\r\n/>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default SearchComponent;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CardList from './components/cardList/cardList';\r\nimport SearchComponent  from './components/searchComponent/searchComponent';\r\nimport'./index.css';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            searchField: '',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then((response)=>response.json())\r\n    .then(users => this.setState({\r\n        users: users\r\n    }))\r\n    .catch(error=> console.log(error))\r\n    }\r\n    handleChange = e => {\r\n        this.setState({searchField: e.target.value})\r\n    }\r\n    \r\n        render() {\r\n        const { users, searchField } = this.state;\r\n        const filtererdUsers = users.filter(user=>user.name.toLowerCase().includes(searchField.toLowerCase()))\r\n        console.log(searchField, 'fil')\r\n        return (\r\n        <div className='App'>\r\n        <h1>Monsters Rolodex</h1>\r\n        <SearchComponent   \r\n        placeholder='search monster' \r\n        handleChange={this.handleChange} />\r\n        <CardList users={filtererdUsers} />\r\n        </div>\r\n        );\r\n    }\r\n}\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}